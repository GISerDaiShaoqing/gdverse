# Generated by roxygen2: do not edit by hand

S3method(print,ecological_detector)
S3method(print,factor_detector)
S3method(print,interaction_detector)
S3method(print,risk_detector)
export("%>%")
export(F_informationloss)
export(cpsd_spade)
export(ecological_detector)
export(factor_detector)
export(gd)
export(gd_bestunidisc)
export(gd_sesu)
export(generate_subsets)
export(gozh)
export(gozh_detector)
export(interaction_detector)
export(inverse_distance_weight)
export(opgd)
export(psd_pseudop)
export(psd_spade)
export(psmd_pseudop)
export(psmd_spade)
export(rescale_vector)
export(rgd)
export(risk_detector)
export(robust_disc)
export(rpart_disc)
export(shuffle_vector)
export(spade)
export(spd_lesh)
export(spvar)
export(st_unidisc)
export(weight_assign)
importFrom(classInt,classify_intervals)
importFrom(dplyr,all_of)
importFrom(dplyr,arrange)
importFrom(dplyr,bind_cols)
importFrom(dplyr,bind_rows)
importFrom(dplyr,case_when)
importFrom(dplyr,count)
importFrom(dplyr,desc)
importFrom(dplyr,everything)
importFrom(dplyr,filter)
importFrom(dplyr,group_by)
importFrom(dplyr,mutate)
importFrom(dplyr,n)
importFrom(dplyr,pull)
importFrom(dplyr,select)
importFrom(dplyr,slice_max)
importFrom(dplyr,ungroup)
importFrom(geosphere,distm)
importFrom(knitr,kable)
importFrom(magrittr,"%>%")
importFrom(pander,pander)
importFrom(parallel,clusterExport)
importFrom(parallel,makeCluster)
importFrom(parallel,parLapply)
importFrom(parallel,stopCluster)
importFrom(purrr,list_rbind)
importFrom(purrr,map)
importFrom(purrr,map2_dfr)
importFrom(purrr,map_chr)
importFrom(purrr,map_dbl)
importFrom(purrr,map_dfc)
importFrom(purrr,map_dfr)
importFrom(purrr,pmap_chr)
importFrom(purrr,pmap_dfc)
importFrom(purrr,set_names)
importFrom(rpart,rpart)
importFrom(stats,as.dist)
importFrom(stats,as.formula)
importFrom(stats,dist)
importFrom(stats,pf)
importFrom(stats,rnorm)
importFrom(stats,runif)
importFrom(stats,t.test)
importFrom(stats,var)
importFrom(tibble,as_tibble)
importFrom(tibble,tibble)
importFrom(tidyr,crossing)
importFrom(tidyr,pivot_wider)
importFrom(utils,combn)
